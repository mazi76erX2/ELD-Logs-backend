# Generated by Django 5.1.2 on 2025-03-14 10:51

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ELDLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                (
                    "log_data",
                    models.JSONField(
                        help_text="JSON representation of the log activities"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("address", models.TextField()),
                ("latitude", models.FloatField()),
                ("longitude", models.FloatField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="ELDLogSheet",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("log_sheet_data", models.JSONField(blank=True, null=True)),
                ("log_image", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "eld_log",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="log_sheet",
                        to="trip_planner.eldlog",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Trip",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "current_cycle_hours",
                    models.FloatField(
                        help_text="Current hours used in the 70-hour/8-day cycle"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "current_location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trips_as_current",
                        to="trip_planner.location",
                    ),
                ),
                (
                    "dropoff_location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trips_as_dropoff",
                        to="trip_planner.location",
                    ),
                ),
                (
                    "pickup_location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trips_as_pickup",
                        to="trip_planner.location",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RouteSegment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("distance_miles", models.FloatField()),
                ("estimated_duration_minutes", models.IntegerField()),
                (
                    "geometry",
                    models.TextField(
                        help_text="Encoded polyline or GeoJSON for the route segment"
                    ),
                ),
                (
                    "segment_type",
                    models.CharField(
                        choices=[
                            ("Driving", "Driving"),
                            ("Mandatory Rest", "Rest"),
                            ("Fueling Stop", "Fuel"),
                            ("Pickup", "Pickup"),
                            ("Dropoff", "Dropoff"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "order",
                    models.IntegerField(
                        help_text="Order of this segment in the complete route"
                    ),
                ),
                (
                    "end_location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="segments_as_end",
                        to="trip_planner.location",
                    ),
                ),
                (
                    "start_location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="segments_as_start",
                        to="trip_planner.location",
                    ),
                ),
                (
                    "trip",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="segments",
                        to="trip_planner.trip",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="eldlog",
            name="trip",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="eld_logs",
                to="trip_planner.trip",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="eldlog",
            unique_together={("trip", "date")},
        ),
    ]
